{"version":3,"sources":["components/Container/Container.js","components/Feedback/Feedback.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/Container/Container.module.css"],"names":["Container","children","className","s","container","Feedback","options","onLeaveFeedback","Object","entries","map","key","label","onClick","Statistics","good","neutral","bad","total","positivePercentage","Section","title","Notification","message","protoType","PropTypes","string","App","state","leveFeedback","option","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gRAMeA,EAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,wBCDjB,SAASI,EAAT,GAAiD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC1C,OACE,mCACGC,OAAOC,QAAQH,GAASI,KAAI,mCAAEC,EAAF,KAAOC,EAAP,YAC3B,wBAAkBC,QAAS,kBAAMN,EAAgBK,IAAjD,SACGA,GADUD,QCJN,SAASG,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,uCAAUC,KACV,oDAAuBC,EAAvB,UCdS,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOpB,EAAY,EAAZA,SACvC,OACE,qCACE,6BAAKoB,IACJpB,KCHQ,SAASqB,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,6BAAKA,IHUdlB,EAASmB,UAAY,CACnBlB,QAASmB,IAAUC,OACnBnB,gBAAiBkB,IAAUC,Q,IImDdC,E,4MA1DbC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPY,aAAe,SAAAC,GACb,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJF,EAASE,EAAUF,GAAU,O,EAKpCG,mBAAqB,WAAO,IAAD,EACM,EAAKL,MAEpC,OAHyB,EACjBb,KADiB,EACXC,QADW,EACFC,K,EAKzBiB,gCAAkC,WAAO,IAC/BnB,EAAS,EAAKa,MAAdb,KACFG,EAAQ,EAAKe,qBAEnB,OAAOf,EAAQ,EAAIiB,KAAKC,MAAOrB,EAAOG,EAAS,KAAO,G,uDAG9C,IAAD,EACwBmB,KAAKT,MAA5Bb,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQmB,KAAKJ,qBACbd,EAAqBkB,KAAKH,kCAEhC,OACE,eAAC,EAAD,WACE,cAACd,EAAD,CAASC,MAAM,wBAAf,SACE,cAAChB,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB8B,KAAKR,iBAG1B,cAACT,EAAD,CAASC,MAAM,aAAf,SACGH,EAAQ,EACP,cAACJ,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAACG,EAAD,CAAcC,QAAQ,+B,GAnDhBe,a,MCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.f09be7ce.chunk.js","sourcesContent":["import s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={s.container}>{children}</div>\n);\n\nexport default Container;\n","import PropTypes from 'prop-types';\n\nexport default function Feedback({ options, onLeaveFeedback }) {\n  return (\n    <>\n      {Object.entries(options).map(([key, label]) => (\n        <button key={key} onClick={() => onLeaveFeedback(label)}>\n          {label}\n        </button>\n      ))}\n    </>\n  );\n}\nFeedback.protoType = {\n  options: PropTypes.string,\n  onLeaveFeedback: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <>\n      <p>good: {good}</p>\n      <p>neutral: {neutral}</p>\n      <p>bad: {bad}</p>\n      <p>tota: {total}</p>\n      <p>positive feedback: {positivePercentage}%</p>\n    </>\n  );\n}\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\nexport default function Section({ title, children }) {\n  return (\n    <>\n      <h2>{title}</h2>\n      {children}\n    </>\n  );\n}\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Notification({ message }) {\n  return <h2>{message}</h2>;\n}\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import { Component } from 'react';\nimport Container from './components/Container';\nimport FeedbackOptions from './components/Feedback';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  leveFeedback = option => {\n    this.setState(prevState => {\n      return {\n        [option]: prevState[option] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n\n    return total > 0 ? Math.round((good / total) * 100) : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.leveFeedback}\n          />\n        </Section>\n        <Section title=\"statistics\">\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1loFk\"};"],"sourceRoot":""}